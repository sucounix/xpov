name: "TerraformCI-CD"
on:
  push:
    branches:
      - dev
      # - stg
      # - main
    paths:
      - '01-infra/**'

defaults:
  run:
    shell: bash
    working-directory: 01-infra/infra
env:
 TF_ROOT: "../infra"

jobs:

  prepare:
    runs-on: ubuntu-latest
    outputs:
      branch_name: ${{ steps.vars.outputs.branch_name }}
    steps:

      - uses: actions/checkout@v2

      - name: Set output
        id: vars
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ]
          then
            echo ::set-output name=branch_name::${{ github.event.pull_request.base.ref }}
            echo ${{ github.event.pull_request.base.ref }}
          else
            echo ::set-output name=branch_name::${GITHUB_REF#refs/*/}
            echo ${GITHUB_REF#refs/*/}
            echo environment=${GITHUB_REF#refs/*/} >> $GITHUB_ENV
          fi
          echo "sha_short::${GITHUB_SHA::7}"
          echo "::set-output name=sha_short::${GITHUB_SHA::7}"

  terraform:
    name: "Terraform"
    needs: prepare
    with:
      environment: ${{ needs.prepare.outputs.branch_name }}
    runs-on: ubuntu-latest
    steps:
      - name: aws
        uses: Fooji/create-aws-profile-action@v1
        with:
          # environment: ${{ needs.prepare.outputs.branch_name }}
          profile: default
          region: us-east-1
          key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          secret: ${{ secrets.AWS_SECRET_ACCESS_KEY }}



      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1


      - name: Terraform Format
        id: fmt
        run: |
          echo $ENV
          terraform fmt -check -recursive -diff

      - name: Terraform Init
        id: init
        run: |
            terraform init \
            -backend-config=../backend/${{env.environment}}.conf

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        # if: github.event_name == 'pull_request'
        run: |
          terraform plan \
          -var="aws-access-key=${{ secrets.AWS_ACCESS_KEY_ID }}" \
          -var="aws-secret-key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
          --var-file="../envs/${{env.environment}}.tfvars"
        # continue-on-error: true

      # - name: Terraform deploy
      #   if: ${{ inputs.github_event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true }}
      #   run: |
      #     terraform apply --auto-approve \
      #     -var="aws-access-key=${{ secrets.AWS_ACCESS_KEY_ID }}" \
      #     -var="aws-secret-key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
      #     --var-file="../envs/${{env.environment}}.tfvars"

  # infracost:
  #   runs-on: ubuntu-latest
  #   needs: terraform
  #   name: Show infracost diff
  #   steps:
  #     - name: Setup Infracost
  #       uses: infracost/actions/setup@v2
  #       # See https://github.com/infracost/actions/tree/master/setup for other inputs
  #       # If you can't use this action, see Docker images in https://infracost.io/cicd
  #       with:
  #         api-key: ${{ secrets.INFRACOST_API_KEY }}

  #     # Checkout the base branch of the pull request (e.g. main/master).
  #     - name: Checkout base branch
  #       uses: actions/checkout@v3
  #       with:
  #         ref: '${{ github.event.pull_request.base.ref }}'

  #     # Generate Infracost JSON file as the baseline.
  #     - name: Generate Infracost cost estimate baseline
  #       run: |
  #         infracost breakdown --path=${TF_ROOT} \
  #                             --format=json \
  #                             --terraform-var=${{ secrets.AWS_ACCESS_KEY_ID }}" \
  #                             --terraform-var=${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
  #                             --terraform-var-file="../envs/${{env.environment}}.tfvars" \
  #                             --out-file=/tmp/infracost-base.json

  #     # # Checkout the current PR branch so we can create a diff.
  #     # - name: Checkout PR branch
  #     #   uses: actions/checkout@v3

  #     # Generate an Infracost diff and save it to a JSON file.
  #     - name: Generate Infracost diff
  #       run: |
  #         infracost diff --path=${TF_ROOT} \
  #                         --format=json \
  #                         --compare-to=/tmp/infracost-base.json \
  #                         --terraform-var=${{ secrets.AWS_ACCESS_KEY_ID }}" \
  #                         --terraform-var=${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
  #                         --terraform-var-file="../envs/${{env.environment}}.tfvars" \
  #                         --out-file=/tmp/infracost.json

  #     # Posts a comment to the PR using the 'update' behavior.
  #     # This creates a single comment and updates it. The "quietest" option.
  #     # The other valid behaviors are:
  #     #   delete-and-new - Delete previous comments and create a new one.
  #     #   hide-and-new - Minimize previous comments and create a new one.
  #     #   new - Create a new cost estimate comment on every push.
  #     # See https://www.infracost.io/docs/features/cli_commands/#comment-on-pull-requests for other options.
  #     # - name: Post Infracost comment
  #     #   run: |
  #     #       infracost comment github --path=/tmp/infracost.json \
  #     #                                --repo=$GITHUB_REPOSITORY \
  #     #                                --github-token=${{github.token}} \
  #     #                                --pull-request=${{github.event.pull_request.number}} \
  #     #                                --behavior=update
